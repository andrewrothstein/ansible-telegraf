---
- name: Resolve platform specific vars
  ansible.builtin.include_vars: '{{ item }}'
  with_first_found:
    - files:
        - '{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml'
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}.yml'
      skip: true
      paths:
        - '{{ role_path }}/vars'
- name: Check for install in {{ telegraf_install_dir }}
  become: true
  ansible.builtin.stat:
    path: '{{ telegraf_install_dir }}'
  changed_when: false
  register: telegraf_binary
- name: Downloading and installing telegraf
  when: not telegraf_binary.stat.exists
  block:
    - name: Downloading {{ telegraf_url }}
      become: true
      become_user: root
      ansible.builtin.get_url:
        url: '{{ telegraf_url }}'
        dest: '{{ telegraf_tmp_archive }}'
        mode: '644'
        checksum: '{{ telegraf_checksum }}'
    - name: Installing andrewrothstein.unarchivedeps
      ansible.builtin.include_role:
        name: andrewrothstein.unarchivedeps
    - name: Unarchiving {{ telegraf_tmp_archive }} to {{ telegraf_parent_install_dir }}
      become: true
      become_user: root
      ansible.builtin.unarchive:
        remote_src: true
        src: '{{ telegraf_tmp_archive }}'
        dest: '{{ telegraf_parent_install_dir }}'
        creates: '{{ telegraf_install_dir }}'
  always:
    - name: Rm {{ telegraf_tmp_archive }}
      become: true
      become_user: root
      ansible.builtin.file:
        path: '{{ telegraf_tmp_archive }}'
        state: absent
- name: Link {{ telegraf_link_dir }} to {{ telegraf_install_dir }}
  become: true
  become_user: root
  ansible.builtin.file:
    src: '{{ telegraf_install_dir }}'
    dest: '{{ telegraf_link_dir }}'
    state: link
- name: Link {{ telegraf_link_exe }} to {{ telegraf_install_exe }}
  become: true
  become_user: root
  ansible.builtin.file:
    src: '{{ telegraf_install_exe }}'
    dest: '{{ telegraf_link_exe }}'
    state: link
